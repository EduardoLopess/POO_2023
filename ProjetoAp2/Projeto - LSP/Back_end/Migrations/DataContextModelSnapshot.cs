// <auto-generated />
using System;
using Back_end.Models.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Backend.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0");

            modelBuilder.Entity("Back_end.Models.Domain.Entities.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Bairro")
                        .HasColumnType("TEXT");

                    b.Property<int>("CEP")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cidade")
                        .HasColumnType("TEXT");

                    b.Property<string>("Complemento")
                        .HasColumnType("TEXT");

                    b.Property<int>("InstitutoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PontoDoacaoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Rua")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("InstitutoId")
                        .IsUnique();

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("Back_end.Models.Domain.Entities.Instituto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CNPJ")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT");

                    b.Property<int>("EnderecoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<int>("TipoInstituto")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Institutos");
                });

            modelBuilder.Entity("Back_end.Models.Domain.Entities.MaterialDoacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT");

                    b.Property<int?>("InstitutoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PontoDoacaoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PrioridadeDoacao")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TipoMaterial")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("InstitutoId");

                    b.HasIndex("PontoDoacaoId")
                        .IsUnique();

                    b.ToTable("MateriaisDoacao");
                });

            modelBuilder.Entity("Back_end.Models.Domain.Entities.PontoDoacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT");

                    b.Property<int>("EnderecoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("InstitutoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("EnderecoId")
                        .IsUnique();

                    b.HasIndex("InstitutoId");

                    b.ToTable("PontoDoacao");
                });

            modelBuilder.Entity("Back_end.Models.Domain.Entities.Voluntariado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT");

                    b.Property<int?>("InstitutoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Titulo")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("InstitutoId");

                    b.ToTable("Voluntariados");
                });

            modelBuilder.Entity("Back_end.Models.Domain.Entities.VoluntariadoBeneficio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Titulo")
                        .HasColumnType("TEXT");

                    b.Property<int>("VoluntariadoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("VoluntariadoId");

                    b.ToTable("VoluntariadoBeneficios");
                });

            modelBuilder.Entity("Back_end.Models.Domain.Entities.VoluntariadoResponsabilidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Titulo")
                        .HasColumnType("TEXT");

                    b.Property<int>("VoluntariadoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("VoluntariadoId");

                    b.ToTable("VoluntariadoResponsabilidades");
                });

            modelBuilder.Entity("Back_end.Models.Domain.Entities.Endereco", b =>
                {
                    b.HasOne("Back_end.Models.Domain.Entities.Instituto", "Instituto")
                        .WithOne("Endereco")
                        .HasForeignKey("Back_end.Models.Domain.Entities.Endereco", "InstitutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instituto");
                });

            modelBuilder.Entity("Back_end.Models.Domain.Entities.MaterialDoacao", b =>
                {
                    b.HasOne("Back_end.Models.Domain.Entities.Instituto", "Instituto")
                        .WithMany("MaterialDoacaos")
                        .HasForeignKey("InstitutoId");

                    b.HasOne("Back_end.Models.Domain.Entities.PontoDoacao", "PontoDoacao")
                        .WithOne("MaterialDoacao")
                        .HasForeignKey("Back_end.Models.Domain.Entities.MaterialDoacao", "PontoDoacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instituto");

                    b.Navigation("PontoDoacao");
                });

            modelBuilder.Entity("Back_end.Models.Domain.Entities.PontoDoacao", b =>
                {
                    b.HasOne("Back_end.Models.Domain.Entities.Endereco", "Endereco")
                        .WithOne("PontoDoacao")
                        .HasForeignKey("Back_end.Models.Domain.Entities.PontoDoacao", "EnderecoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Back_end.Models.Domain.Entities.Instituto", "Instituto")
                        .WithMany()
                        .HasForeignKey("InstitutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Endereco");

                    b.Navigation("Instituto");
                });

            modelBuilder.Entity("Back_end.Models.Domain.Entities.Voluntariado", b =>
                {
                    b.HasOne("Back_end.Models.Domain.Entities.Instituto", "Instituto")
                        .WithMany("Voluntariados")
                        .HasForeignKey("InstitutoId");

                    b.Navigation("Instituto");
                });

            modelBuilder.Entity("Back_end.Models.Domain.Entities.VoluntariadoBeneficio", b =>
                {
                    b.HasOne("Back_end.Models.Domain.Entities.Voluntariado", "Voluntariado")
                        .WithMany("Beneficios")
                        .HasForeignKey("VoluntariadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Voluntariado");
                });

            modelBuilder.Entity("Back_end.Models.Domain.Entities.VoluntariadoResponsabilidade", b =>
                {
                    b.HasOne("Back_end.Models.Domain.Entities.Voluntariado", "Voluntariado")
                        .WithMany("Responsabilidade")
                        .HasForeignKey("VoluntariadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Voluntariado");
                });

            modelBuilder.Entity("Back_end.Models.Domain.Entities.Endereco", b =>
                {
                    b.Navigation("PontoDoacao");
                });

            modelBuilder.Entity("Back_end.Models.Domain.Entities.Instituto", b =>
                {
                    b.Navigation("Endereco");

                    b.Navigation("MaterialDoacaos");

                    b.Navigation("Voluntariados");
                });

            modelBuilder.Entity("Back_end.Models.Domain.Entities.PontoDoacao", b =>
                {
                    b.Navigation("MaterialDoacao");
                });

            modelBuilder.Entity("Back_end.Models.Domain.Entities.Voluntariado", b =>
                {
                    b.Navigation("Beneficios");

                    b.Navigation("Responsabilidade");
                });
#pragma warning restore 612, 618
        }
    }
}
